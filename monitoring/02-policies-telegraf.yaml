apiVersion: v1
kind: ServiceAccount
metadata:
  name: vrops-mp-user
  namespace: kube-system
imagePullSecrets:
- name: cmbu-docker-credentials
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeapps-clusterrole
rules:
- apiGroups:
  - policy
  resourceNames:
  - kubeapps-psp
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubeapps-clusterrole
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeapps-clusterrole
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts
- kind: ServiceAccount
  name: default
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vrops-mp-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: vrops-mp-user
  namespace: kube-system
---
apiVersion: v1
data:
  telegraf.conf: "# Configuration for telegraf agent\n[global_tags]\nnamespace = \"$NAMESPACE\"\n[agent]\ninterval
    = \"10s\"\nround_interval = true\nmetric_batch_size = 1000\nmetric_buffer_limit
    = 10000\ncollection_jitter = \"0s\"\nflush_interval = \"10s\"\nflush_jitter =
    \"0s\"\nprecision = \"\"\nquiet = false\nhostname = \"\"\nomit_hostname = true\n#######################################################################\n#
    \                           OUTPUT PLUGINS                           #                                                                                                                       \n#######################################################################\n#
    Configuration for the Prometheus client to spawn\n[[outputs.prometheus_client]]\n##
    Address to listen on\nlisten = \":9273\"\n#######################################################################\n#
    \                           INPUT PLUGINS                            #                                                                                                                    \n#######################################################################
    \                                                                                                           \n[[inputs.kubernetes]]\n
    ## URL for the kubelet\nurl = \"https://$NODE_IP:10250\"\ninsecure_skip_verify
    = true\n"
kind: ConfigMap
metadata:
  name: vrops-telegraf-k8s-config
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: docker/default
  labels:
    app: vrops-telegraf-k8s
  name: vrops-telegraf-k8s
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: vrops-telegraf-k8s
  template:
    metadata:
      labels:
        app: vrops-telegraf-k8s
        version: v1.0
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: METRIC_SOURCE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: telegraf:1.16.0
        name: vrops-telegraf-k8s-container
        ports:
        - containerPort: 9273
          hostPort: 31196
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 400m
          requests:
            cpu: 250m
            memory: 250Mi
        volumeMounts:
        - mountPath: /etc/telegraf
          name: telegraf-d
      serviceAccountName: vrops-mp-user
      imagePullSecrets:
      - name: cmbu-docker-credentials
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - name: telegraf-d
        projected:
          sources:
          - configMap:
              name: vrops-telegraf-k8s-config
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: kubeapps-psp
spec:
  fsGroup:
    rule: RunAsAny
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
